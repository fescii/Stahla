### Authentication and User Management

### Variables
@baseUrl = http://localhost:8000/api/v1
@contentType = application/json

### Get JWT Token (Login)
# @name login
POST {{baseUrl}}/auth/token
Content-Type: application/json

{
    "username": "isfescii@gmail.com",
    "password": "pass1234"
}

### Get the token from the previous response
@authToken = {{login.response.body.data.access_token}}

### Get Current User Information
GET {{baseUrl}}/auth/me
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

### Create New User (Admin Only)
POST {{baseUrl}}/auth/users/
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
    "email": "john@doe.com",
    "password": "StrongPassword123!",
    "name": "John Doe",
    "role": "member",
    "is_active": true
}

### Upload User Picture (Method 2 - Manual multipart)
POST {{baseUrl}}/auth/users/e2564c11-ce72-454b-acd4-5ecda760450d/picture
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryExample

------WebKitFormBoundaryExample
Content-Disposition: form-data; name="file"; filename="femar.jpg"
Content-Type: image/jpeg

< ./femar.jpg
------WebKitFormBoundaryExample--

### Delete User Picture
DELETE {{baseUrl}}/auth/users/e2564c11-ce72-454b-acd4-5ecda760450d/picture
Authorization: Bearer {{authToken}}

### List All Users (Admin Only)
GET {{baseUrl}}/auth/users/
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

### Get User by ID (Admin Only)
GET {{baseUrl}}/auth/users/1bfbd07c-ac22-48eb-8e10-78d7487e7a85
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

### Update User (Admin Only)
PUT {{baseUrl}}/auth/users/1bfbd07c-ac22-48eb-8e10-78d7487e7a85
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
    "name": "Updated User Name",
    "is_active": true,
    "role": "member"
}

### Delete User (Admin Only)
DELETE {{baseUrl}}/auth/users/cb03af45-00ac-41ea-ab9a-d2ecf745dfe2
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}
